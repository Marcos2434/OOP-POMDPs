mdp

formula target = s =2;


formula initialized = 
x00 >= 0 &
x01 >= 0 &
x10 >= 0 &
x11 >= 0 &
x30 >= 0 &
x31 >= 0 &
x40 >= 0 &
x41 >= 0 &
x0 >= 0 &
x1 >= 0 &
y0 >= 0 &
y1 >= 0 &
y3 >= 0 &
y4 >= 0 &
true;


module line
		s : [0..4];
		started : bool;
		x00 : [-1..1] init -1;
		x01 : [-1..1] init -1;
		x10 : [-1..1] init -1;
		x11 : [-1..1] init -1;
		x30 : [-1..1] init -1;
		x31 : [-1..1] init -1;
		x40 : [-1..1] init -1;
		x41 : [-1..1] init -1;
		x0 : [-1..1] init -1;
		x1 : [-1..1] init -1;
		y0: [-1..1] init -1;
		y1: [-1..1] init -1;
		y3: [-1..1] init -1;
		y4: [-1..1] init -1;



		// CHOICE OF OBSERVATIONS
		[y0y1] (!initialized & y0 =-1 & y1 =-1 & y3 =-1 & y4 =-1) -> (y0'=1) & (y1'=1) & (y3'=0) & (y4'=0);
		[y0y3] (!initialized & y0 =-1 & y1 =-1 & y3 =-1 & y4 =-1) -> (y0'=1) & (y1'=0) & (y3'=1) & (y4'=0);
		[y0y4] (!initialized & y0 =-1 & y1 =-1 & y3 =-1 & y4 =-1) -> (y0'=1) & (y1'=0) & (y3'=0) & (y4'=1);
		[y1y3] (!initialized & y0 =-1 & y1 =-1 & y3 =-1 & y4 =-1) -> (y0'=0) & (y1'=1) & (y3'=1) & (y4'=0);
		[y1y4] (!initialized & y0 =-1 & y1 =-1 & y3 =-1 & y4 =-1) -> (y0'=0) & (y1'=1) & (y3'=0) & (y4'=1);
		[y3y4] (!initialized & y0 =-1 & y1 =-1 & y3 =-1 & y4 =-1) -> (y0'=0) & (y1'=0) & (y3'=1) & (y4'=1);
		
		// CHOICE OF STRATEGY
		
		[x00] (!initialized & x00 =-1 & x01 =-1) -> (x00' =1) & (x01'=0);
		[x01] (!initialized & x00 =-1 & x01 =-1) -> (x00' =0) & (x01'=1);
		[x10] (!initialized & x10 =-1 & x11 =-1) -> (x10' =1) & (x11'=0);
		[x11] (!initialized & x10 =-1 & x11 =-1) -> (x10' =0) & (x11'=1);
		[x30] (!initialized & x30 =-1 & x31 =-1) -> (x30' =1) & (x31'=0);
		[x31] (!initialized & x30 =-1 & x31 =-1) -> (x30' =0) & (x31'=1);
		[x40] (!initialized & x40 =-1 & x41 =-1) -> (x40' =1) & (x41'=0);
		[x41] (!initialized & x40 =-1 & x41 =-1) -> (x40' =0) & (x41'=1);
		[x0] (!initialized & x0 =-1 & x1 =-1) -> (x0' =1) & (x1'=0);
		[x1] (!initialized & x0 =-1 & x1 =-1) -> (x0' =0) & (x1'=1);


		[] !started & initialized -> 1/4: (started' = true) & (s' = 0)
			+ 1/4 : (started'=true) & (s'=1)
			+ 1/4 : (started'=true) & (s'=3)
			+ 1/4 : (started'=true) & (s'=4);

		[move] s=0 & started  -> (1 - y0)*x0 + y0*x00: (s'=0) + (1 - y0)*x1 + y0*x01: (s'=1);
		[move] s=1 & started  -> (1 - y1)*x0 + y1*x10: (s'=0) + (1 - y1)*x1 + y1*x11: (s'=2);
		[move] s=2 & started  -> (s' = s); 
		[move] s=3 & started  -> (1 - y3)*x0 + y3*x30: (s'=2) + (1 - y3)*x1 + y3*x31: (s'=4);
		[move] s=4 & started  -> (1 - y4)*x0 + y4*x40: (s'=3) + (1 - y4)*x1 + y4*x41: (s'=4);
endmodule

rewards
		[move] !target : 1;
endrewards